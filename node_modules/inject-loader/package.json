{
  "_args": [
    [
      {
        "raw": "inject-loader@^3.0.0",
        "scope": null,
        "escapedName": "inject-loader",
        "name": "inject-loader",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\kpace\\Documents\\sandbox\\vue\\vue-webpack"
    ]
  ],
  "_from": "inject-loader@>=3.0.0 <4.0.0",
  "_id": "inject-loader@3.0.0",
  "_inCache": true,
  "_location": "/inject-loader",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/inject-loader-3.0.0.tgz_1490562990738_0.20028313668444753"
  },
  "_npmUser": {
    "name": "justinmorris",
    "email": "desk+npm@pixelbloom.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "inject-loader@^3.0.0",
    "scope": null,
    "escapedName": "inject-loader",
    "name": "inject-loader",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "http://registry.npmjs.org/inject-loader/-/inject-loader-3.0.0.tgz",
  "_shasum": "0aea1f96e589e657bdbb6b26e7d9d41730e5b68f",
  "_shrinkwrap": null,
  "_spec": "inject-loader@^3.0.0",
  "_where": "C:\\Users\\kpace\\Documents\\sandbox\\vue\\vue-webpack",
  "author": {
    "name": "Justin Morris",
    "email": "desk@pixelbloom.com",
    "url": "http://pixelbloom.com"
  },
  "bugs": {
    "url": "https://github.com/plasticine/inject-loader/issues"
  },
  "dependencies": {
    "babel-core": "~6"
  },
  "description": "A Webpack loader for injecting code into modules via their dependencies",
  "devDependencies": {
    "@webpack-blocks/webpack2": "^0.4.0",
    "babel-loader": "^6.4.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-es2015": "^6.22.0",
    "eslint": "^3.17.1",
    "eslint-config-airbnb-base": "^11.1.1",
    "eslint-plugin-import": "^2.2.0",
    "mocha": "^3.2.0",
    "source-map-support": "^0.4.14",
    "webpack": "^2.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "0aea1f96e589e657bdbb6b26e7d9d41730e5b68f",
    "tarball": "https://registry.npmjs.org/inject-loader/-/inject-loader-3.0.0.tgz"
  },
  "files": [
    "*.md",
    "dist"
  ],
  "gitHead": "cef4047347fdb7a5f39021fbd15d28a6d2afa8e6",
  "homepage": "https://github.com/plasticine/inject-loader#readme",
  "keywords": [
    "webpack",
    "testing",
    "loader",
    "webpack-loader",
    "inject",
    "mock",
    "mocking"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "justinmorris",
      "email": "desk+npm@pixelbloom.com"
    }
  ],
  "name": "inject-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^1 || ^2"
  },
  "readme": "# inject-loader\n\n[![build status](https://img.shields.io/travis/plasticine/inject-loader/master.svg?style=flat-square)](https://travis-ci.org/plasticine/inject-loader) [![Gemnasium](https://img.shields.io/gemnasium/plasticine/inject-loader.svg?style=flat-square)](https://gemnasium.com/plasticine/inject-loader) [![npm version](https://img.shields.io/npm/v/inject-loader.svg?style=flat-square)](https://www.npmjs.com/package/inject-loader) [![npm downloads](https://img.shields.io/npm/dm/inject-loader.svg?style=flat-square)](https://www.npmjs.com/package/inject-loader)\n\n**ðŸ’‰ðŸ‘¾ A Webpack loader for injecting code into modules via their dependencies**\n\nThis is particularly useful for writing tests where mocking things inside your module-under-test is sometimes necessary before execution.\n\n`inject-loader` was inspired by, and builds upon ideas introduced in [jauco/webpack-injectable](https://github.com/jauco/webpack-injectable).\n\n### Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\nUse the inject loader by adding `inject-loader!` when you use `require`, this will return a function that can be passed things to inject.\n\nBy default all `require` statements in an injected module will be altered to be replaced with an injector, though if a replacement it not specified the default will be used.\n\n### Examples\n\nGiven some code in a module like this:\n\n```javascript\n// MyStore.js\n\nvar Dispatcher = require('lib/dispatcher');\nvar EventEmitter = require('events').EventEmitter;\nvar handleAction = require('lib/handle_action');\n\nDispatcher.register(handleAction, 'MyStore');\n```\n\nYou can manipulate itâ€™s dependencies when you come to write tests as follows:\n\n```javascript\n// If no flags are provided when using the loader then\n// all require statements will be wrapped in an injector\nMyModuleInjector = require('inject-loader!MyStore')\nMyModule = MyModuleInjector({\n  'lib/dispatcher': DispatcherMock,\n  'events': EventsMock,\n  'lib/handle_action': HandleActionMock\n})\n```\n\nThere are a few examples of complete test setups for both Webpack 1 & 2 in the [`example`](./example) folder.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/plasticine/inject-loader.git"
  },
  "scripts": {
    "build": "webpack --config config/webpack.config.js",
    "build-test": "webpack --config config/webpack.test.config.js",
    "eslint": "eslint {src,config,__tests__}/** example/*/{src,test}",
    "integration_test": "./script/integration_test",
    "test": "mocha tmp/testBundle.js --require source-map-support/register"
  },
  "version": "3.0.0"
}
